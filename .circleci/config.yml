version: 2.1
jobs:
  build_debian:
    machine:
      image: ubuntu-2004:current
    parameters:
      docker_image:
        type: string
      wget_arguments:
        type: string
        default: ""
      installer_arguments:
        type: string
        default: ""
    steps:
      - run:
          name: "Prepare image with systemd enabled"
          command: echo -e "FROM << parameters.docker_image >>\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update; apt-get install -y systemd systemd-sysv; \nCMD [\"/lib/systemd/systemd\"]" | sudo docker build --tag debian_systemd -
      - run:
          name: "Deploy new systemd enabled image"
          command: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro --privileged --cap-add SYS_ADMIN  --name linux_systemd_container debian_systemd /lib/systemd/systemd
      - run: sudo docker ps
      - run: sudo docker exec -it linux_systemd_container apt-get update
      - run: sudo docker exec -it linux_systemd_container apt-get install -y wget
      - run: sudo docker exec -it linux_systemd_container wget << parameters.wget_arguments >> https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: sudo docker exec -it linux_systemd_container chmod +x installer
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -install_community_edition << parameters.installer_arguments >>
      - run: sudo docker exec -it linux_systemd_container systemctl status fastnetmon --no-pager
      - run: sudo docker exec -it linux_systemd_container ldd /usr/bin/fastnetmon
      - run: sudo docker exec -it linux_systemd_container ldd /usr/bin/fastnetmon_client
      - run: sudo docker exec -it linux_systemd_container ldd /usr/bin/fastnetmon_api_client
      - run: sudo docker exec -it linux_systemd_container /usr/bin/fastnetmon --configuration_check
      - run: sudo docker exec -it linux_systemd_container /usr/bin/fastnetmon_client --help
  build_debian_upstream:
    machine:
      image: ubuntu-2004:current
    parameters:
      docker_image:
        type: string
    steps:
      - run:
          name: "Prepare image with systemd enabled"
          command: echo -e "FROM << parameters.docker_image >>\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update; apt-get install -y systemd systemd-sysv; \nCMD [\"/lib/systemd/systemd\"]" | sudo docker build --tag debian_systemd -
      - run:
          name: "Deploy new systemd enabled image"
          command: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro --privileged --cap-add SYS_ADMIN  --name linux_systemd_container debian_systemd /lib/systemd/systemd
      - run: sudo docker ps
      - run: sudo docker exec -it linux_systemd_container apt-get update
      - run: sudo docker exec -it linux_systemd_container apt-get install -y fastnetmon
      - run: sudo docker exec -it linux_systemd_container systemctl start fastnetmon
      - run: sudo docker exec -it linux_systemd_container systemctl status fastnetmon --no-pager
      - run: sudo docker exec -it linux_systemd_container ldd /usr/sbin/fastnetmon
      - run: sudo docker exec -it linux_systemd_container ldd /usr/bin/fastnetmon_client
      - run: sudo docker exec -it linux_systemd_container /usr/sbin/fastnetmon --configuration_check
      - run: sudo docker exec -it linux_systemd_container /usr/bin/fastnetmon_client --help

  build_ubuntu_1404:
    docker:
      - image: ubuntu:trusty
    steps:
      - run: apt-get update
      - run: apt-get install -y wget
      - run: wget --no-check-certificate https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: ./installer -install_community_edition
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: ldd /usr/bin/fastnetmon
      - run: ldd /usr/bin/fastnetmon_client
      - run: ldd /usr/bin/fastnetmon_api_client
      - run: /usr/bin/fastnetmon --configuration_check
      - run: /usr/bin/fastnetmon_client --help

  debian10_upgrade_from_repo_version:
    docker:
      - image: debian:buster
    steps:
      - run: apt-get update
      - run: apt-get install -y fastnetmon apt-utils
      - run: apt-get install -y wget
      - run: wget https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: ./installer -install_community_edition
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: ldd /usr/bin/fastnetmon
      - run: ldd /usr/bin/fastnetmon_client
      - run: ldd /usr/bin/fastnetmon_api_client
      - run: /usr/bin/fastnetmon --configuration_check
      - run: /usr/bin/fastnetmon_client --help
      - run: dpkg -l |grep fastnetmon
  build_centos_legacy:
    docker:
      - image: << parameters.docker_image >>
    parameters:
      docker_image:
        type: string
      wget_arguments:
        type: string
        default: ""
      installer_arguments:
        type: string
        default: ""
    steps:
      - run: yum install -y wget
      - run: wget << parameters.wget_arguments >> https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: ./installer -install_community_edition << parameters.installer_arguments >>
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: ldd /opt/fastnetmon/fastnetmon
      - run: ldd /opt/fastnetmon/fastnetmon_client
      - run: ldd /opt/fastnetmon/fastnetmon_api_client
      - run: /opt/fastnetmon/fastnetmon --configuration_check
      - run: /opt/fastnetmon/fastnetmon_client --help
  build_centos:
    docker:
      - image: << parameters.docker_image >>
    parameters:
      docker_image:
        type: string
      wget_arguments:
        type: string
        default: ""
      installer_arguments:
        type: string
        default: ""
    steps:
      - run: yum install -y wget
      - run: wget << parameters.wget_arguments >> https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: ./installer -install_community_edition << parameters.installer_arguments >>
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: ldd /usr/bin/fastnetmon
      - run: ldd /usr/bin/fastnetmon_client
      - run: ldd /usr/bin/fastnetmon_api_client
      - run: /usr/bin/fastnetmon --configuration_check
      - run: /usr/bin/fastnetmon_client --help
  centos6:
    docker:
      - image: centos:centos6
    steps:
      - run: sed -i '/mirrorlist/d' /etc/yum.repos.d/CentOS-Base.repo
      - run: sed -i 's/#baseurl/baseurl/' /etc/yum.repos.d/CentOS-Base.repo
      - run: sed -i 's/mirror.centos.org/vault.centos.org/' /etc/yum.repos.d/CentOS-Base.repo
      - run: yum install -y wget
      - run: wget --no-check-certificate https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: ./installer -install_community_edition
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: ldd /opt/fastnetmon/fastnetmon
      - run: ldd /opt/fastnetmon/fastnetmon_client
      - run: ldd /opt/fastnetmon/fastnetmon_api_client
      - run: /opt/fastnetmon/fastnetmon --configuration_check
      - run: /opt/fastnetmon/fastnetmon_client --help
  build_fedora:
    machine:
      image: ubuntu-2004:current
    parameters:
      docker_image:
        type: string
    steps:
      - run:
          name: "Prepare image with systemd enabled"
          command: echo -e "FROM << parameters.docker_image >>\nRUN dnf install -y systemd; \nCMD [\"/lib/systemd/systemd\"]" | sudo docker build --tag fedora_systemd - 
      - run:
          name: "Start Docker with systemd enabled in container"
          command: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro --privileged --cap-add SYS_ADMIN --name linux_systemd_container fedora_systemd /sbin/init
      - run: sudo docker ps
      - run: sudo docker exec -it linux_systemd_container systemctl status --no-pager
      - run: sudo docker exec -it linux_systemd_container dnf install -y fastnetmon
      - run: sudo docker exec -it linux_systemd_container systemctl enable fastnetmon
      - run: sudo docker exec -it linux_systemd_container systemctl start fastnetmon
      - run: sudo docker exec -it linux_systemd_container systemctl status fastnetmon --no-pager 
      - run: sudo docker exec -it linux_systemd_container ldd /usr/sbin/fastnetmon
      - run: sudo docker exec -it linux_systemd_container ldd /usr/bin/fastnetmon_client
      - run: sudo docker exec -it linux_systemd_container ldd /usr/bin/fastnetmon_api_client
      - run: sudo docker exec -it linux_systemd_container /usr/sbin/fastnetmon --configuration_check
      - run: sudo docker exec -it linux_systemd_container /usr/bin/fastnetmon_client --help

workflows:
  version: 2
  all_distros_nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - debian10_upgrade_from_repo_version
      - build_debian:
          name: "Debian 8"
          docker_image: debian:jessie
          wget_arguments: "--no-check-certificate"
      - build_debian:
          name: "Debian 9"
          docker_image: debian:stretch
      - build_debian:
          name: "Debian 10"
          docker_image: debian:buster
      - build_debian:
          name: "Debian 11"
          docker_image: debian:bullseye
      - build_debian:
          name: "Debian 9 dev"
          docker_image: debian:stretch
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Debian 10 dev"
          docker_image: debian:buster
          installer_arguments: "-developer_version"
      - build_debian_upstream:
          name: "Debian Sid Upstream"
          docker_image: debian:sid
      - build_debian:
          name: "Debian 11 dev"
          docker_image: debian:bullseye
          installer_arguments: "-developer_version"
      - build_ubuntu_1404:
          name: "Ubuntu 14.04"
      - build_debian:
          name: "Ubuntu 16.04"
          docker_image: ubuntu:xenial
      - build_debian:
          name: "Ubuntu 18.04"
          docker_image: ubuntu:bionic
      - build_debian:
          name: "Ubuntu 20.04"
          docker_image: ubuntu:focal
      - build_debian:
          name: "Ubuntu 16.04 dev"
          docker_image: ubuntu:xenial
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Ubuntu 18.04 dev"
          docker_image: ubuntu:bionic
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Ubuntu 20.04 dev"
          docker_image: ubuntu:focal
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Ubuntu 22.04 dev"
          docker_image: ubuntu:jammy
          installer_arguments: "-developer_version"
      - centos6
      - build_centos_legacy:
          name: "CentOS 7"
          docker_image: centos:centos7
          wget_arguments: "--no-check-certificate"
      - build_centos_legacy:
          name: "CentOS 8"
          docker_image: almalinux:8
      - build_centos:
          name: "CentOS 7 dev"
          docker_image: centos:centos7
          wget_arguments: "--no-check-certificate"
          installer_arguments: "-developer_version"
      - build_centos:
          name: "CentOS 8 dev"
          docker_image: almalinux:8
          installer_arguments: "-developer_version"
      - build_centos:
          name: "CentOS 9 dev"
          docker_image: almalinux:9
          installer_arguments: "-developer_version"
      - build_fedora:
          name: "Fedora Rawhide upstream"
          docker_image: fedora:rawhide
  all_distros:
    jobs:
      - debian10_upgrade_from_repo_version
      - build_debian:
          name: "Debian 8"
          docker_image: debian:jessie
          wget_arguments: "--no-check-certificate"
      - build_debian:
          name: "Debian 9"
          docker_image: debian:stretch
      - build_debian:
          name: "Debian 10"
          docker_image: debian:buster
      - build_debian:
          name: "Debian 11"
          docker_image: debian:bullseye
      - build_debian:
          name: "Debian 9 dev"
          docker_image: debian:stretch
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Debian 10 dev"
          docker_image: debian:buster
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Debian 11 dev"
          docker_image: debian:bullseye
          installer_arguments: "-developer_version"
      - build_debian_upstream:
          name: "Debian Sid Upstream"
          docker_image: debian:sid
      - build_ubuntu_1404:
          name: "Ubuntu 14.04"
      - build_debian:
          name: "Ubuntu 16.04"
          docker_image: ubuntu:xenial
      - build_debian:
          name: "Ubuntu 18.04"
          docker_image: ubuntu:bionic
      - build_debian:
          name: "Ubuntu 20.04"
          docker_image: ubuntu:focal
      - build_debian:
          name: "Ubuntu 22.04"
          docker_image: ubuntu:jammy
      - build_debian:
          name: "Ubuntu 16.04 dev"
          docker_image: ubuntu:xenial
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Ubuntu 18.04 dev"
          docker_image: ubuntu:bionic
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Ubuntu 20.04 dev"
          docker_image: ubuntu:focal
          installer_arguments: "-developer_version"
      - build_debian:
          name: "Ubuntu 22.04 dev"
          docker_image: ubuntu:jammy
          installer_arguments: "-developer_version"
      - centos6
      - build_centos_legacy:
          name: "CentOS 7"
          docker_image: centos:centos7
          wget_arguments: "--no-check-certificate"
      - build_centos_legacy:
          name: "CentOS 8"
          docker_image: almalinux:8
      - build_centos:
          name: "CentOS 7 dev"
          docker_image: centos:centos7
          wget_arguments: "--no-check-certificate"
          installer_arguments: "-developer_version"
      - build_centos:
          name: "CentOS 8 dev"
          docker_image: almalinux:8
          installer_arguments: "-developer_version"
      - build_centos:
          name: "CentOS 9 dev"
          docker_image: almalinux:9
          installer_arguments: "-developer_version"
      - build_fedora:
          name: "Fedora Rawhide upstream"
          docker_image: fedora:rawhide

